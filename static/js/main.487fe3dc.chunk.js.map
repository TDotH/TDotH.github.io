{"version":3,"sources":["components/projectsList.js","images/vegify.png","pages/ProjectsPage.js","images/pfp.png","pages/WelcomePage.js","images/background.jpg","App.js","reportWebVitals.js","index.js"],"names":["projects","name","keywords","type","skills","colorTheme","description","image","links","link","linkTypes","ProjectsPage","props","id","className","map","project","index","style","borderBottomColor","src","alt","keyword","arr","key","length","target","rel","href","Provider","value","WelcomePage","pfp","backgroundImage","Background","backgroundSize","fontFamily","pages","page","getWindowDimensions","window","width","innerWidth","height","innerHeight","App","useState","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","useWindowDimensions","scrollbar","useRef","pagePosition","scrollAnimation","currentIndex","setCurrentIndex","isScrolling","pageIndex","scrollState","setScrollState","current","getScrollTop","useLayoutEffect","start","currentPagePosition","newPagePosition","document","getElementById","offsetTop","scrollDistance","Math","abs","scrollDirection","sign","animateScroll","timestamp","undefined","x","elapsed","increment","pow","truncationFunc","min","max","scrollTop","requestAnimationFrame","step","cancelAnimationFrame","onClick","scrollTo","autoHeight","autoHeightMax","overflow","onScroll","content","i","children","offset","offsetHeight","parseInt","onWheel","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.487fe3dc.chunk.js","sourcesContent":["import vegify from '../images/vegify.png';\n\nconst projects = [\n    {\n        name: 'Vegify',\n        keywords: ['Javascript', 'React', 'Google Cloud Platform'],\n        type: 'E-Commerce Website',\n        skills: [],\n        colorTheme: '#385B0D',\n        description: 'A e-commerce website designed for restaurant owners a way to provide vegan options to customers',\n        image: vegify,\n        links: [{\n            type: 'website',\n            link: 'https://vegify-app.web.app/',\n        }]\n    }\n];\n\nexport default projects;\n","export default __webpack_public_path__ + \"static/media/vegify.13981c55.png\";","import React from \"react\";\nimport '../styles/ProjectsPage.scss'\nimport projects from '../components/projectsList.js';\nimport { FiLink } from 'react-icons/fi';\nimport { IconContext } from \"react-icons\";\n\nconst linkTypes = {\n    'website': <FiLink />,\n}\n\nfunction ProjectsPage(props) {\n    return (\n        <div id={props.id} className='projects-page'>\n            <div className='projects-header'>\n                <h1>Projects</h1>\n            </div>\n            <div className='projects-container'>\n                {projects.map((project, index) => {\n                    return (\n                    <div key={index} className='project'>\n                        <div style={{ borderBottomColor: project.colorTheme }} className='project-name'>\n                            <div className='project-image'>\n                                <img src={project.image} alt='project'/>\n                            </div>\n                            <p>{project.name}</p>\n                        </div>\n                        <div className='project-description'>\n                        {project.type}\n                            <div className='project-keywords'>\n                                <p>\n                                {project.keywords.map((keyword, index, arr) => {\n                                    let key = keyword\n                                    if (arr.length - 1 !== index) {\n                                        key += ' / ';\n                                    } \n                                    return key;\n                                })}\n                                </p>\n                            </div>\n                            <div className='project-links'>\n                                {project.links.map((link, index) => {\n                                    return (\n                                    <a key={index} target=\"_blank\" rel=\"noopener noreferrer\" className='info-links' href={link.link}>\n                                        <IconContext.Provider value={{ className: \"info-icon\" }}>\n                                            {linkTypes[link.type]}\n                                        </IconContext.Provider>\n                                    </a>\n                                    )\n                                })}\n                            </div>\n                        </div> \n                    </div>\n                    )\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default ProjectsPage;","export default __webpack_public_path__ + \"static/media/pfp.1355268e.png\";","import React from 'react';\nimport pfp from '../images/pfp.png';\nimport '../styles/WelcomePage.scss';\nimport { FaGithubSquare, FaLinkedin, FaEnvelopeSquare } from 'react-icons/fa';\nimport { IconContext } from \"react-icons\";\n\nfunction WelcomePage(props) {\n    return (\n        <div id={props.id} className='welcome-page'> \n            <div className='welcome-card'>\n                <div className='welcome-text'>\n                    <h1>Welcome!</h1>\n                        <div className='info-card'>\n                            <img src={pfp} alt='Me'/>\n                            <div className='info-text'>\n                                <p>I'm Tyde Hashimoto</p>\n                                <p className='title-text'>Software Engineer</p>\n                            </div>\n                        </div>\n                    <div className='icon-row'>\n                        <a className='info-links' href='mailto: tyd@pdx.edu'>\n                            <IconContext.Provider value={{ className: \"info-icon\" }}>\n                                <FaEnvelopeSquare />\n                            </IconContext.Provider>\n                        </a>\n                        <a className='info-links' href='https://github.com/TDotH'>\n                            <IconContext.Provider value={{ className: \"info-icon\" }}>\n                                <FaGithubSquare />\n                            </IconContext.Provider>\n                        </a>\n                        <a className='info-links' href='https://www.linkedin.com/in/tyde-hashimoto-665456156/'>\n                            <IconContext.Provider value={{ className: \"info-icon\" }}>\n                                <FaLinkedin/>\n                            </IconContext.Provider>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WelcomePage;","export default __webpack_public_path__ + \"static/media/background.63c08b95.jpg\";","import React, {useState, useEffect, useLayoutEffect, useRef} from 'react';\nimport './styles/App.scss';\nimport ProjectsPage from './pages/ProjectsPage.js';\nimport WelcomePage from './pages/WelcomePage.js';\nimport Background from './images/background.jpg';\nimport { Scrollbars } from 'react-custom-scrollbars-2';\nimport \"@fontsource/ibm-plex-sans\"\n\nconst style = {\n  backgroundImage: `url(${Background})`,\n  backgroundSize: 'cover',\n  fontFamily: \"IBM Plex Sans\",\n};\n\nconst pages = [\n  {\n    name:'Welcome',\n    page: (id) => <WelcomePage key={id} id={id}/>\n  },\n  {\n    name: 'Projects',\n    page: (id) => <ProjectsPage key={id} id={id}/>\n  },\n];\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(\n    getWindowDimensions()\n  );\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\nfunction easeInOutCubic(x) {\n  /* Param:\n   *  - x: Animation value [0-1] (start to finish)\n   */\n  return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}\n\nfunction App() {\n  const { height } = useWindowDimensions();\n  const scrollbar = useRef(null);\n  const pagePosition = useRef(0);\n  const scrollAnimation = useRef(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [scrollState, setScrollState] = useState({isScrolling: false, pageIndex: 0});\n\n  function scrollTo(index) {\n    setCurrentIndex(index);\n    setScrollState({pageIndex: index, isScrolling: true});\n  };\n\n  function cancelScroll() {\n    if (scrollState.isScrolling) {\n      setScrollState({...scrollState, isScrolling: false});\n    }\n  };\n\n  function updatePagePosition() {\n    pagePosition.current = scrollbar.current.getScrollTop();\n    if (!scrollState.isScrolling) {\n      let content = document.getElementById('Content');\n      for (let i = 0; i < content.children.length; i++) {\n        let offset = content.children[i].offsetHeight / 2;\n        if (pagePosition.current < content.children[i].offsetTop + offset) {\n          setCurrentIndex(parseInt(content.children[i].id));\n          break;\n        } \n      }\n    }\n  };\n\n  // Set current page position on initial render\n  useEffect(() => {\n    pagePosition.current = scrollbar.current.getScrollTop();\n  }, [scrollbar]);\n\n  // Scroll Animation\n  useLayoutEffect(() => {\n    const scrollDuration = 1000; //milliseconds\n    const currentPagePosition = scrollbar.current.getScrollTop();\n    const newPagePosition = document.getElementById(scrollState.pageIndex).offsetTop;\n    const scrollDistance = Math.abs(newPagePosition - currentPagePosition);\n    const scrollDirection = -Math.sign(currentPagePosition - newPagePosition);\n    let start;\n\n    function animateScroll(timestamp) {\n      if ( start === undefined ) {\n        start = timestamp;\n      }\n      const elapsed = timestamp - start;\n      let increment = scrollDistance * easeInOutCubic(elapsed / scrollDuration);\n\n      let truncationFunc = (scrollDirection > 0) ? Math.min : Math.max;\n      scrollbar.current.scrollTop(truncationFunc(currentPagePosition + increment * scrollDirection, newPagePosition));\n\n      if (elapsed < scrollDuration) {\n        scrollAnimation.current = window.requestAnimationFrame(function(step) { animateScroll(step); });\n      } else {\n        setScrollState(scrollState => ({...scrollState, isScrolling: false}));\n      }\n    }\n\n    if ( scrollState.isScrolling ) {\n      window.cancelAnimationFrame(scrollAnimation.current);\n      scrollAnimation.current = window.requestAnimationFrame(function(step) { animateScroll(step);} );\n\n    } else {\n      window.cancelAnimationFrame(scrollAnimation.current);\n    }\n\n  }, [scrollState, scrollbar]);\n\n  return (\n    <div className=\"App\" style={ style }>\n      <div className='header'>\n        {pages.map((link, index) => {\n          return (\n          <div onClick={() => {scrollTo(index)}} \n               className={`header-link ${currentIndex === index ? 'header-link-active ' : ' '}`} \n               key={index}>\n            <p>{link.name}</p>\n          </div>\n          )\n        })}\n      </div>\n        <Scrollbars\n          autoHeight={true}\n          autoHeightMax={height}\n          style={{overflow:'none'}}\n          onScroll={updatePagePosition}\n          onWheel={cancelScroll}\n          ref={scrollbar}\n        >\n          <div id=\"Content\" >\n            {pages.map((page, index) => {\n              return page.page(index);\n            })}\n          </div>\n        </Scrollbars>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}